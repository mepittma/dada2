#!/usr/bin/perl

use strict;
use warnings;

use File::Path qw( make_path );

my @run_list;
my $cmd;
my $path;

# Quit unless we have the correct number of command-line args
my $num_args = $#ARGV + 1;
if ($num_args != 1) {
    print "\nUsage: download_data.pl -(l|r)\n Where -l indicates running locally, -r remotely.\n";
    exit;
}

if ($ARGV[0] eq "-r") {
    my $base_dir = "/pollard/home/mpittman/dada2";

    # 1. Download the data from Texas A&M TNBS study - but wait it's not paired-end
    @run_list = ("SRR1238685","SRR1238686","SRR1238687","SRR1238688","SRR1238689",
    "SRR1238690","SRR1238691","SRR1238692","SRR1238693","SRR1238694","SRR1238695",
    "SRR1238696");
    $path = "$base_dir/Data/raw_16S/UTA_TNBS";
    download_data(\@run_list, $path);

    # 2. Download the data from UCSD TNBS study - also not paired-end
    @run_list = ("ERR1897923", "ERR1897921", "ERR1897919", "ERR1897917", "ERR1897915", "ERR1897913",
    "ERR1897911", "ERR1897909", "ERR1897907", "ERR1897905", "ERR1897903", "ERR1897901", "ERR1897899",
    "ERR1897897", "ERR1897896", "ERR1897894", "ERR1897892", "ERR1897890", "ERR1897888", "ERR1897887",
    "ERR1897885", "ERR1897883", "ERR1897881", "ERR1897879", "ERR1897877", "ERR1897875", "ERR1897873",
    "ERR1897871", "ERR1897869", "ERR1897867", "ERR1897865", "ERR1897863", "ERR1897861", "ERR1897859",
    "ERR1897857", "ERR1897855", "ERR1897851", "ERR1897853", "ERR1897849");
    $path = "$base_dir/Data/raw_16S/UCSD_TNBS";
    download_data(\@run_list, $path);

    # 3. Download the data from the Third Military Medical University AOM/DSS 2014
    @run_list = ("SRR4000172", "SRR4003589", "SRR4003590", "SRR4003591", "SRR4004428",
    "SRR4004672", "SRR4004892", "SRR4004921", "SRR4004949", "SRR4004993", "SRR4006161",
    "SRR4006162", "SRR4006163", "SRR4006164", "SRR4006213", "SRR4007122", "SRR4007124",
    "SRR4007234", "SRR4007286", "SRR4007287", "SRR4007290", "SRR4007292", "SRR4007293",
    "SRR4007295", "SRR4007299", "SRR4007302", "SRR4007332", "SRR4007386", "SRR4007387",
    "SRR4007389", "SRR4007390", "SRR4007391", "SRR4007392", "SRR4007394", "SRR4007395",
    "SRR4007396", "SRR4007397", "SRR4007398", "SRR4007399", "SRR4007442");
    $path = "$base_dir/Data/raw_16S/TMM_AOMDSS_2014";
    download_data(\@run_list, $path);

    # 4. Download the data from the Third Military Medical University AOM/DSS 2016
    @run_list = ("SRR4417597", "SRR4417588", "SRR4417584", "SRR4417576", "SRR4417580",
    "SRR4417568", "SRR4417495", "SRR4417483", "SRR4417473", "SRR4417470", "SRR4417459", "SRR4417463");
    $path = "$base_dir/Data/raw_16S/TMM_AOMDSS_2016";
    download_data(\@run_list, $path);


    # 5. Download the data from the Third Military Medical University DSS
    @run_list = ("SRR4419852","SRR4419853","SRR4419854","SRR4419855","SRR4419856","SRR4423081");
    $path = "$base_dir/Data/raw_16S/TMM_DSS";
    download_data(\@run_list, $path);

    # 6. Download the data from the Mount Sinai DSS study
    @run_list = ("SRR6121940", "SRR6121939", "SRR6121938", "SRR6121936", "SRR6121937", "SRR6121935",
    "SRR6121933", "SRR6121934", "SRR6121932", "SRR6121931", "SRR6121929", "SRR6121930", "SRR6121928",
    "SRR6121927", "SRR6121926", "SRR6121925", "SRR6121924", "SRR6121923", "SRR6121922", "SRR6121920",
    "SRR6121921", "SRR6121919", "SRR6121918", "SRR6121917", "SRR6121916", "SRR6121915", "SRR6121914",
    "SRR6121913", "SRR6121912", "SRR6121911", "SRR6121910", "SRR6121909", "SRR6121908", "SRR6121906",
    "SRR6121907", "SRR6121905", "SRR6121904", "SRR6121903", "SRR6121902", "SRR6121901", "SRR6121900",
    "SRR6121899", "SRR6121898", "SRR6121896", "SRR6121895", "SRR6121894", "SRR6121893", "SRR6121892",
    "SRR6121891", "SRR6121889", "SRR6121897", "SRR6121890", "SRR6121887", "SRR6121886", "SRR6121888",
    "SRR6121885", "SRR6121884", "SRR6121883", "SRR6121881", "SRR6121882", "SRR6121879", "SRR6121880",
    "SRR6121878", "SRR6121877", "SRR6121876", "SRR6121875", "SRR6121873", "SRR6121874", "SRR6121872",
    "SRR6121871", "SRR6121869", "SRR6121870", "SRR6121868", "SRR6121867", "SRR6121865", "SRR6121864",
    "SRR6121863", "SRR6121862", "SRR6121861", "SRR6121860", "SRR6121859", "SRR6121858", "SRR6121857",
    "SRR6121856", "SRR6121855", "SRR6121854", "SRR6121853", "SRR6121852", "SRR6121866");
    $path = "$base_dir/Data/raw_16S/MS_DSS";
    download_data(\@run_list, $path);

    # 7. Download the data from the UT Southwestern DSS study
    @run_list = ("ERR1806583", "ERR1806584", "ERR1806585", "ERR1806586", "ERR1806587", "ERR1806588",
    "ERR1806589", "ERR1806590", "ERR1806591", "ERR1806592", "ERR1806593", "ERR1806594", "ERR1806595",
    "ERR1806596", "ERR1806597", "ERR1806598", "ERR1806599", "ERR1806600", "ERR1806601", "ERR1806602",
    "ERR1806603", "ERR1806604", "ERR1806605", "ERR1806606");
    $path = "$base_dir/Data/raw_16S/UTS_DSS";
    download_data(\@run_list, $path);


    # 8. Download the data from the Helmholtz study
    @run_list = ("SRR6127255", "SRR6127254", "SRR6127251", "SRR6127250", "SRR6127239",
    "SRR6127238", "SRR6127236", "SRR6127235", "SRR6127234", "SRR6127233", "SRR6127232",
    "SRR6127231", "SRR6127230", "SRR6127229", "SRR6127228", "SRR6127227", "SRR6127226",
    "SRR6127225", "SRR6127224", "SRR6127223", "SRR6127222", "SRR6127221", "SRR6127220",
    "SRR6127218", "SRR6127216", "SRR6127215", "SRR6127214", "SRR6127213", "SRR6127212",
    "SRR6127211", "SRR6127210", "SRR6127217", "SRR6127209", "SRR6127208", "SRR6127207",
    "SRR6127206", "SRR6127205", "SRR6127204", "SRR6127201", "SRR6127199", "SRR6127198",
    "SRR6127196", "SRR6127195", "SRR6127194", "SRR6127193", "SRR6127191", "SRR6127190",
    "SRR6127189", "SRR6127187", "SRR6127186", "SRR6127185", "SRR6127184", "SRR6127183",
    "SRR6127182", "SRR6127181", "SRR6127179", "SRR6127177", "SRR6127176", "SRR6127175",
    "SRR6127174", "SRR6127173", "SRR6127172", "SRR6127171", "SRR6127170", "SRR6127169",
    "SRR6127167", "SRR6127166", "SRR6127165", "SRR6127164", "SRR6127163", "SRR6127162",
    "SRR6127161", "SRR6127160", "SRR6127159", "SRR6127158", "SRR6127157", "SRR6127156",
    "SRR6127155", "SRR6127154", "SRR6127152", "SRR6127150", "SRR6127149", "SRR6127141",
    "SRR6127140", "SRR6127139", "SRR6127138", "SRR6127137", "SRR6127136", "SRR6127135",
    "SRR6127133", "SRR6127124", "SRR6127119", "SRR6127118", "SRR6127117", "SRR6127116",
    "SRR6127115", "SRR6127114", "SRR6127113", "SRR6127112", "SRR6127111", "SRR6127110",
    "SRR6127109", "SRR6127106", "SRR6127105", "SRR6127104", "SRR6127103", "SRR6127102",
    "SRR6127101", "SRR6127098", "SRR6127096", "SRR6127094", "SRR6127093", "SRR6127092",
    "SRR6127091", "SRR6127090", "SRR6127089", "SRR6127088", "SRR6127087", "SRR6127085",
    "SRR6127083", "SRR6127080", "SRR6127078", "SRR6127079", "SRR6127077", "SRR6127076",
    "SRR6127075", "SRR6127074", "SRR6127073", "SRR6127072", "SRR6127071", "SRR6127070",
    "SRR6127069", "SRR6127068", "SRR6127066", "SRR6127065", "SRR6127064", "SRR6127062",
    "SRR6127059", "SRR6127058", "SRR6127056", "SRR6127052", "SRR6127049", "SRR6127050",
    "SRR6127048", "SRR6127047", "SRR6127046", "SRR6127045", "SRR6127044", "SRR6127043",
    "SRR6127042", "SRR6127041", "SRR6127039", "SRR6127040", "SRR6127038", "SRR6127036",
    "SRR6127037", "SRR6127035", "SRR6127034", "SRR6127033", "SRR6127032", "SRR6127030",
    "SRR6127023", "SRR6127022", "SRR6127021", "SRR6127020", "SRR6127019", "SRR6127018",
    "SRR6127014", "SRR6127012", "SRR6127009", "SRR6127008", "SRR6127007", "SRR6127006",
    "SRR6127005", "SRR6127004", "SRR6127003", "SRR6126999", "SRR6126998", "SRR6126992",
    "SRR6126991", "SRR6126990", "SRR6126987", "SRR6126988", "SRR6126986", "SRR6126985",
    "SRR6126983", "SRR6126982", "SRR6126981", "SRR6126977", "SRR6126976", "SRR6126974",
    "SRR6126972", "SRR6126970", "SRR6126965", "SRR6126966", "SRR6126963", "SRR6126961",
    "SRR6126960", "SRR6126959", "SRR6126958", "SRR6126957", "SRR6126956", "SRR6126951",
    "SRR6126949", "SRR6126948", "SRR6126947", "SRR6126944", "SRR6126945", "SRR6126943",
    "SRR6126942", "SRR6126941", "SRR6126940", "SRR6126939", "SRR6126938", "SRR6126937",
    "SRR6126935", "SRR6126934", "SRR6126933", "SRR6126932", "SRR6126931", "SRR6126930",
    "SRR6126928", "SRR6126927", "SRR6126924", "SRR6127386", "SRR6127385", "SRR6127384",
    "SRR6127381", "SRR6127380", "SRR6127378", "SRR6127377", "SRR6127376", "SRR6127375",
    "SRR6127374", "SRR6127373", "SRR6127371", "SRR6127370", "SRR6127367", "SRR6127366",
    "SRR6127365", "SRR6127364", "SRR6127362", "SRR6127360", "SRR6127357", "SRR6127356",
    "SRR6127355", "SRR6127354", "SRR6127352", "SRR6127351", "SRR6127350", "SRR6127348",
    "SRR6127349", "SRR6127346", "SRR6127347", "SRR6127345", "SRR6127344", "SRR6127343",
    "SRR6127342", "SRR6127341", "SRR6127340", "SRR6127339", "SRR6127336", "SRR6127334",
    "SRR6127330", "SRR6127327", "SRR6127324", "SRR6127322", "SRR6127320", "SRR6127318",
    "SRR6127316", "SRR6127315", "SRR6127314", "SRR6127310", "SRR6127309", "SRR6127308",
    "SRR6127307", "SRR6127305", "SRR6127304", "SRR6127303", "SRR6127301", "SRR6127298",
    "SRR6127297", "SRR6127294", "SRR6127293", "SRR6127292", "SRR6127290", "SRR6127288",
    "SRR6127286", "SRR6127285", "SRR6127284", "SRR6127282", "SRR6127281", "SRR6127280",
    "SRR6127279", "SRR6127278", "SRR6127277", "SRR6127275", "SRR6127273", "SRR6127272",
    "SRR6127271", "SRR6127270", "SRR6127268", "SRR6127265", "SRR6127260", "SRR6127283",
    "SRR6127295", "SRR6127123", "SRR6126969");
    $path = "$base_dir/Data/raw_16S/Helm_DSS";
    download_data(\@run_list, $path);

    # 9. Download data from the UMichigan Ann Arbor DSS study
    @run_list = ("SRR1914518", "SRR1914517", "SRR1914516", "SRR1914515", "SRR1914514", "SRR1914513",
    "SRR1914542", "SRR1914541", "SRR1914540", "SRR1914539", "SRR1914538", "SRR1914537", "SRR1914536",
    "SRR1914535", "SRR1914534", "SRR1914533", "SRR1914532", "SRR1914531", "SRR1914530", "SRR1914529",
    "SRR1914526", "SRR1914525", "SRR1914524", "SRR1914523", "SRR1914522", "SRR1914521", "SRR1914520",
    "SRR1914519", "SRR1914598", "SRR1914599", "SRR1914600", "SRR1914601", "SRR1914602", "SRR1914603",
    "SRR1914810", "SRR1914809", "SRR1914808", "SRR1914807", "SRR1914806", "SRR1914805", "SRR1914804",
    "SRR1914803", "SRR1914802", "SRR1914801", "SRR1914800", "SRR1914799", "SRR1914797", "SRR1914796",
    "SRR1914795", "SRR1914794", "SRR1914791", "SRR1914793", "SRR1914860", "SRR1914859", "SRR1914858",
    "SRR1914857", "SRR1914856", "SRR1914855", "SRR1914854", "SRR1914853", "SRR1914852", "SRR1914851",
    "SRR1914850", "SRR1914848", "SRR1914849", "SRR1914847", "SRR1914846", "SRR1914845", "SRR1914844",
    "SRR1914843", "SRR1914842", "SRR1914841", "SRR1914840", "SRR1914839", "SRR1914838", "SRR1914837",
    "SRR1914836", "SRR1914835", "SRR1914834", "SRR1914833", "SRR1914832", "SRR1914831", "SRR1914830",
    "SRR1914829", "SRR1914828", "SRR1914827", "SRR1914826", "SRR1914825", "SRR1914824", "SRR1914823",
    "SRR1914822", "SRR1914821", "SRR1914820", "SRR1914819", "SRR1914818", "SRR1914817", "SRR1914816",
    "SRR1914815", "SRR1914814", "SRR1914813", "SRR1914812", "SRR1914811", "SRR1914936", "SRR1914935",
    "SRR1914934", "SRR1914933", "SRR1914932", "SRR1914931", "SRR1914930", "SRR1914929", "SRR1914928",
    "SRR1914927", "SRR1914926", "SRR1914925", "SRR1914924", "SRR1914923", "SRR1914922", "SRR1914921",
    "SRR1914920", "SRR1914919", "SRR1914918", "SRR1914917", "SRR1914916", "SRR1914915", "SRR1914914",
    "SRR1914913", "SRR1914912", "SRR1914911", "SRR1914910", "SRR1914909", "SRR1914908", "SRR1914907",
    "SRR1914906", "SRR1914905", "SRR1914904", "SRR1914903", "SRR1914902", "SRR1914901", "SRR1914900",
    "SRR1914899", "SRR1914898", "SRR1914897", "SRR1914884", "SRR1914877", "SRR1914876", "SRR1914875",
    "SRR1914874", "SRR1914873", "SRR1914872", "SRR1914871", "SRR1914870", "SRR1914861");
    $path = "$base_dir/Data/raw_16S/UMAA_DSS";
    download_data(\@run_list, $path);

} elsif ($ARGV[0] eq "-l") {
    print("Local route...\n");
    my $base_dir = "/Users/student/Documents/PollardRotation/dada2";
    $path = "$base_dir/Data/raw_16S";
    @run_list = ("SRR1238685", "ERR1897923", "SRR4004921", "SRR4417483", "SRR6121940",
    "SRR6121890", "ERR1806597", "SRR6127305", "SRR1914841", "SRR4423081", "SRR6121931");

    download_data(\@run_list, $path);

} elsif ($ARGV[0] eq "-il10") {
    print("Just downloading new data for IL10 mice...");
    my $base_dir = "/pollard/home/mpittman/dada2";

    # 1. Download the data from the UCSD IL10 study
    @run_list = ("ERR2183215", "ERR2183216", "ERR2183217", "ERR2183218", "ERR2183219",
    "ERR2183220", "ERR2183221", "ERR2183222", "ERR2183223", "ERR2183224", "ERR2183225",
    "ERR2183226", "ERR2183227", "ERR2183228", "ERR2183234", "ERR2183235", "ERR2183236",
    "ERR2183237", "ERR2183238", "ERR2183247", "ERR2183249", "ERR2183251", "ERR2183252",
    "ERR2183255", "ERR2183257", "ERR2183259", "ERR2183261", "ERR2183263", "ERR2183265",
    "ERR2183266", "ERR2183268", "ERR2183270", "ERR2183273", "ERR2183275", "ERR2183277",
    "ERR2183279", "ERR2183280", "ERR2183283", "ERR2183290", "ERR2183292", "ERR2183293",
    "ERR2183294", "ERR2183295", "ERR2183297", "ERR2183299", "ERR2183301", "ERR2183303",
    "ERR2183305", "ERR2183307", "ERR2183309", "ERR2183311", "ERR2183312", "ERR2183314",
    "ERR2183316", "ERR2183317", "ERR2183319", "ERR2183323", "ERR2183325", "ERR2183327",
    "ERR2183329", "ERR2183331", "ERR2183332", "ERR2183333", "ERR2183335", "ERR2183337",
    "ERR2183339", "ERR2183341", "ERR2183343", "ERR2183345", "ERR2183346", "ERR2183348",
    "ERR2183350", "ERR2183351", "ERR2183353", "ERR2183356", "ERR2183358", "ERR2183360",
    "ERR2183371", "ERR2183372", "ERR2183373", "ERR2183374", "ERR2183375", "ERR2183376",
    "ERR2183377", "ERR2183378", "ERR2183379", "ERR2183380", "ERR2183381", "ERR2183382",
    "ERR2183383", "ERR2183384", "ERR2183386", "ERR2183387", "ERR2183388", "ERR2183389",
    "ERR2183390", "ERR2183391", "ERR2183392", "ERR2183396", "ERR2183410", "ERR2183411",
    "ERR2183412", "ERR2183413", "ERR2183414", "ERR2183415", "ERR2183416", "ERR2183417",
    "ERR2183419", "ERR2183420", "ERR2183421", "ERR2183423", "ERR2183424", "ERR2183425",
    "ERR2183426", "ERR2183427", "ERR2183428", "ERR2183429", "ERR2183430", "ERR2183431",
    "ERR2183440", "ERR2183441", "ERR2183442", "ERR2183443", "ERR2183444", "ERR2183445",
    "ERR2183446", "ERR2183447", "ERR2183448", "ERR2183449", "ERR2183450", "ERR2183451",
    "ERR2183452", "ERR2183454", "ERR2183455", "ERR2183457", "ERR2183460", "ERR2183462",
    "ERR2183477", "ERR2183484", "ERR2183485", "ERR2183486", "ERR2183487", "ERR2183488",
    "ERR2183489", "ERR2183490", "ERR2183491", "ERR2183492", "ERR2183493", "ERR2183494",
    "ERR2183495", "ERR2183496", "ERR2183497", "ERR2183498", "ERR2183500", "ERR2183501",
    "ERR2183502", "ERR2183503", "ERR2183504", "ERR2183505", "ERR2183506", "ERR2183507",
    "ERR2183508", "ERR2183509", "ERR2183510", "ERR2183511", "ERR2183523", "ERR2183529",
    "ERR2183530", "ERR2183532", "ERR2183533", "ERR2183534", "ERR2183535", "ERR2183536",
    "ERR2183537", "ERR2183538", "ERR2183539", "ERR2183540", "ERR2183541", "ERR2183542",
    "ERR2183543", "ERR2183544", "ERR2183545", "ERR2183546", "ERR2183547", "ERR2183563",
    "ERR2183568", "ERR2183569", "ERR2183571", "ERR2183573", "ERR2183574", "ERR2183576",
    "ERR2183577", "ERR2183578", "ERR2183579", "ERR2183580", "ERR2183581", "ERR2183582",
    "ERR2183583", "ERR2183584", "ERR2183586", "ERR2183602", "ERR2183603", "ERR2183604",
    "ERR2183605", "ERR2183606", "ERR2183607", "ERR2183608", "ERR2183609", "ERR2183610",
    "ERR2183611", "ERR2183612", "ERR2183613", "ERR2183614", "ERR2183617", "ERR2183621",
    "ERR2183629", "ERR2183630", "ERR2183631", "ERR2183632", "ERR2183633", "ERR2183637",
    "ERR2183639", "ERR2183640", "ERR2183641", "ERR2183642", "ERR2183644", "ERR2183645",
    "ERR2183646", "ERR2183647", "ERR2183649", "ERR2183650", "ERR2183651", "ERR2183652",
    "ERR2183653", "ERR2183654", "ERR2183655", "ERR2183656", "ERR2183657", "ERR2183658",
    "ERR2183660", "ERR2183661", "ERR2183662", "ERR2183663", "ERR2183664", "ERR2183665",
    "ERR2183666", "ERR2183670", "ERR2183673", "ERR2183674", "ERR2183675", "ERR2183677",
    "ERR2183679", "ERR2183680", "ERR2183682", "ERR2183685", "ERR2183686", "ERR2183687",
    "ERR2183688", "ERR2183689", "ERR2183690", "ERR2183695", "ERR2183696", "ERR2183697",
    "ERR2183698", "ERR2183699", "ERR2183700", "ERR2183701", "ERR2183704", "ERR2183705",
    "ERR2183706", "ERR2183707", "ERR2183708", "ERR2183717", "ERR2183718", "ERR2183720",
    "ERR2183723", "ERR2183725", "ERR2183727", "ERR2183730", "ERR2183732", "ERR2183733",
    "ERR2183734", "ERR2183735", "ERR2183739", "ERR2183741", "ERR2183743", "ERR2183745",
    "ERR2183751", "ERR2183752", "ERR2183757", "ERR2183758", "ERR2183759", "ERR2183761",
    "ERR2183763", "ERR2183773", "ERR2183775", "ERR2183777", "ERR2183778", "ERR2183780",
    "ERR2183781", "ERR2183783", "ERR2183785", "ERR2183787", "ERR2183789", "ERR2183791",
    "ERR2183793", "ERR2183794", "ERR2183796", "ERR2183798", "ERR2183800", "ERR2183802",
    "ERR2183804", "ERR2183806", "ERR2183807", "ERR2183809", "ERR2183811", "ERR2183813",
    "ERR2183815", "ERR2183817", "ERR2183819", "ERR2183820", "ERR2183821", "ERR2183823",
    "ERR2183825", "ERR2183827", "ERR2183828", "ERR2183830", "ERR2183832", "ERR2183834",
    "ERR2183836", "ERR2183838", "ERR2183840", "ERR2183856", "ERR2183857", "ERR2183858",
    "ERR2183859", "ERR2183860", "ERR2183861", "ERR2183862", "ERR2183863", "ERR2183864",
    "ERR2183865", "ERR2183866", "ERR2183867", "ERR2183868", "ERR2183869", "ERR2183870",
    "ERR2183871", "ERR2183872", "ERR2183873", "ERR2183874", "ERR2183875", "ERR2183891",
    "ERR2183892", "ERR2183893", "ERR2183894", "ERR2183895", "ERR2183896", "ERR2183897",
    "ERR2183898", "ERR2183899", "ERR2183900", "ERR2183901", "ERR2183902", "ERR2183903",
    "ERR2183904", "ERR2183905", "ERR2183906", "ERR2183907", "ERR2183908", "ERR2183909",
    "ERR2183910", "ERR2183915", "ERR2183916", "ERR2183917", "ERR2183918", "ERR2183926",
    "ERR2183927", "ERR2183928", "ERR2183929", "ERR2183930", "ERR2183931", "ERR2183932",
    "ERR2183933", "ERR2183934", "ERR2183935", "ERR2183936", "ERR2183944", "ERR2183945",
    "ERR2183946", "ERR2183947", "ERR2183948", "ERR2183949", "ERR2183950", "ERR2183951",
    "ERR2183952", "ERR2183953", "ERR2183954", "ERR2183955", "ERR2183956", "ERR2183957",
    "ERR2183958", "ERR2183959", "ERR2183960", "ERR2183961", "ERR2183962", "ERR2183963",
    "ERR2183964", "ERR2183965", "ERR2183966", "ERR2183967", "ERR2183968", "ERR2183969",
    "ERR2183970", "ERR2183971", "ERR2183972", "ERR2183973", "ERR2183974", "ERR2183975",
    "ERR2183976", "ERR2183980", "ERR2183981", "ERR2183982", "ERR2183983", "ERR2183984",
    "ERR2183985", "ERR2183986", "ERR2183987", "ERR2183988", "ERR2183989", "ERR2183990",
    "ERR2184007", "ERR2184008", "ERR2184009", "ERR2184010", "ERR2184011", "ERR2184012",
    "ERR2184013", "ERR2184014", "ERR2184015", "ERR2184016", "ERR2184017", "ERR2184018",
    "ERR2184019", "ERR2184020", "ERR2184021", "ERR2184022", "ERR2184023", "ERR2184024",
    "ERR2184025", "ERR2184042", "ERR2184043", "ERR2184044", "ERR2184045", "ERR2184046",
    "ERR2184047", "ERR2184048", "ERR2184049", "ERR2184050", "ERR2184051", "ERR2184052",
    "ERR2184053", "ERR2184054", "ERR2184055", "ERR2184056", "ERR2184057", "ERR2184058",
    "ERR2184077", "ERR2184078", "ERR2184079", "ERR2184080", "ERR2184081", "ERR2184082",
    "ERR2184083", "ERR2184084", "ERR2184085", "ERR2184086", "ERR2184087", "ERR2184088",
    "ERR2184089", "ERR2184090", "ERR2184091", "ERR2184093", "ERR2184094", "ERR2184096",
    "ERR2184097", "ERR2184102", "ERR2184103", "ERR2184104", "ERR2184105", "ERR2184106",
    "ERR2184107", "ERR2184109", "ERR2184110", "ERR2184111", "ERR2184112", "ERR2184113",
    "ERR2184114", "ERR2184115", "ERR2184116", "ERR2184117", "ERR2184118", "ERR2184119",
    "ERR2184132", "ERR2184134", "ERR2184136", "ERR2184137", "ERR2184139", "ERR2184141",
    "ERR2184142", "ERR2184143", "ERR2184159", "ERR2184160", "ERR2184161", "ERR2184162",
    "ERR2184163", "ERR2184164", "ERR2184165", "ERR2184166", "ERR2184167", "ERR2184168",
    "ERR2184169", "ERR2184170", "ERR2184171", "ERR2184172", "ERR2184173", "ERR2184182",
    "ERR2184183", "ERR2184184", "ERR2184186");
    $path = "$base_dir/Data/raw_16S/UCSD_IL10";
    download_data(\@run_list, $path);
}

# # # # # # # # SUBROUTINE FOR DOWNLOADING DATA # # # # # # #
sub download_data {
    my ($run_ref, $path) = @_;
    my @run_list = @$run_ref;

    print(join(", ",@run_list), "\n");
    print($path,"\n");

    # If the path doesn't exist, create it
    if ( !-d $path ) {
        make_path $path or die "Failed to create path: $path";
    }

    foreach my $run(@run_list) {
        print "Run ID: $run\n";
        $cmd =
        "fastq-dump --outdir $path --gzip --skip-technical  --readids --read-filter pass --dumpbase --split-files --clip $run";
        system($cmd);
    }
}
